getwd()
setwd("C:/Users/nmsha/Documents/SMU/DoingDataScience/homework/CaseStudy-March14clone/DDS-Case_Study1/paper")
knitr::opts_chunk$set(echo = TRUE)
#set the working directory-
# knitr::opts_knit$set(root.dir = "C:\\Users\\nmsha\\Documents\\SMU\\DoingDataScience\\homework\\CaseStudy1")
knitr::opts_knit$set(root.dir = "..//")
#ensure all required packages are installed, and if not, install them
list.of.packages <- c("downloader","tidyr","ggplot2")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos="http://cran.rstudio.com/")
library(downloader)
library(tidyr)
library(ggplot2)
dir<-getwd()
source(paste(dir,"/source/download.R",sep=""))
setwd("C:\Users\nmsha\Documents\SMU\DoingDataScience\homework\CaseStudy-March14clone")
setwd("C:\\Users\\nmsha\\Documents\\SMU\\DoingDataScience\\homework\\CaseStudy-March14clone\\")
getwd()
knitr::opts_chunk$set(echo = TRUE)
#set the working directory-
# knitr::opts_knit$set(root.dir = "C:\\Users\\nmsha\\Documents\\SMU\\DoingDataScience\\homework\\CaseStudy1")
knitr::opts_knit$set(root.dir = "..//")
#ensure all required packages are installed, and if not, install them
list.of.packages <- c("downloader","tidyr","ggplot2")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos="http://cran.rstudio.com/")
library(downloader)
library(tidyr)
library(ggplot2)
dir<-getwd()
source(paste(dir,"/source/download.R",sep=""))
setwd("C:\\Users\\nmsha\\Documents\\SMU\\DoingDataScience\\homework\\CaseStudy-March14clone\\DDS-Case_Study1\\")
getwd()
knitr::opts_chunk$set(echo = TRUE)
#set the working directory-
# knitr::opts_knit$set(root.dir = "C:\\Users\\nmsha\\Documents\\SMU\\DoingDataScience\\homework\\CaseStudy1")
knitr::opts_knit$set(root.dir = "..//")
#ensure all required packages are installed, and if not, install them
list.of.packages <- c("downloader","tidyr","ggplot2")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos="http://cran.rstudio.com/")
library(downloader)
library(tidyr)
library(ggplot2)
dir<-getwd()
source(paste(dir,"/source/download.R",sep=""))
dir
dir<-getwd()
source(paste(dir,"/source/download.R",sep=""))
source(paste(dir,"/source/cleanup_ED_GDP.R",sep=""))
source(paste(dir,"/source/merge_ED_GDP.R",sep=""))
##use the str command to describe the number of observations.
##rows where the country code did not match were exluded by this line in merge_ED_GDP.R--
#combo2<-subset(combo,!is.na(Long.Name) & !is.na(GDP.Country))
str(combo2)
#sort in order of GDP
sorted_GDP<-combo2[order(combo2$GDP),]
#pick out the 13th row from the dataframe, just the columns needed to answer the question
GDP_13<-sorted_GDP[13,c(1,2,3,4)]
##display the 13th row
GDP_13
#count the NA in the GDP column
sum(is.na(sorted_GDP$GDP))
# Create subset dataframe containing only 'High income: OECD' and
# 'High income: nonOECD' income group countries
combo2.HighIncome <- subset(combo2, combo2$Income.Group == 'High income: OECD' | combo2$Income.Group == 'High income: nonOECD')
# Take the average GDP.ranking by income group of the subset with NA values removed
aggregate(combo2.HighIncome$GDP.ranking~combo2.HighIncome$Income.Group, combo2.HighIncome, mean, na.rm = TRUE)
#count the number of NA values in GDP ranking
sum(is.na(combo2.HighIncome$GDP.ranking))
ggplot(data=combo2, aes(x=GDP, y=CountryCode, color=Income.Group))+geom_point()+geom_text(aes(label=combo2$CountryCode),hjust=0, vjust=0)+ggtitle("Country's by GDP colored by Income Group nonLog")
ggplot(data=combo2, aes(x=log(GDP), y=CountryCode, color=Income.Group))+geom_point()+ggtitle("Country by GDP colored by Income Group Log")+geom_text(aes(label=combo2$CountryCode),hjust=0, vjust=0)+ theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
plot.title = element_text(hjust = 0.5))
#make a table that doesn't have any NA for GDP.Ranking
ranking<-subset(combo2,!is.na(GDP.ranking))
#count the number of NAs that were in that column before the subset--answer is 35
sum(is.na(combo2$GDP.ranking))
#determine how many members should be in each group
QuantSep <- ceiling(sum(!is.na(ranking$GDP.ranking))/5)
#divide the GDP ranking into 5 quantile groups
ranking$GDP.quant.group[ranking$GDP.ranking<=QuantSep]<-"G0_to_20"
ranking$GDP.quant.group[ranking$GDP.ranking>QuantSep & ranking$GDP.ranking<=(2*QuantSep)]<-"G20_to_40"
ranking$GDP.quant.group[ranking$GDP.ranking>(2*QuantSep) & ranking$GDP.ranking<=(3*QuantSep)]<-"G40_to_60"
ranking$GDP.quant.group[ranking$GDP.ranking>(3*QuantSep) & ranking$GDP.ranking<=(4*QuantSep)]<-"G60_to_80"
ranking$GDP.quant.group[ranking$GDP.ranking>(4*QuantSep)]<-"G80_to_100"
#summarize the data by IncomeGroup and GDP ranking group, print the result
QuantIncTable <- data.frame(table(ranking$Income.Group,ranking$GDP.quant.group))
names(QuantIncTable) <- c('IncomeGroup','Ranking','Freq')
QuantIncTable <- spread(QuantIncTable,Ranking,Freq)
QuantIncTable
sessioninfo()
sessionInfo()
